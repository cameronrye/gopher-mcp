name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FORCE_COLOR: "1"
  PIP_DISABLE_PIP_VERSION_CHECK: "1"

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Run tests
        run: uv run pytest --cov-report=xml

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.11' && matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          name: codecov-umbrella

  gemini-tests:
    name: Gemini Protocol Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Run Gemini-specific tests
        run: |
          uv run pytest tests/test_gemini_client.py tests/test_gemini_models.py tests/test_gemini_status.py tests/test_gemini_tls.py tests/test_gemini_utils.py tests/test_security.py tests/test_performance.py -v --tb=short -m "not slow"

      - name: Test Gemini client functionality
        run: |
          uv run python -c "
          import asyncio
          from src.gopher_mcp.server import get_gemini_client

          async def test_gemini():
              client = get_gemini_client()
              print('Gemini client created successfully')
              await client.close()

          asyncio.run(test_gemini())
          "

      - name: Validate Gemini configuration
        run: |
          export GEMINI_TOFU_ENABLED=true
          export GEMINI_CLIENT_CERTS_ENABLED=true
          uv run python -c "
          from src.gopher_mcp.server import get_gemini_client
          client = get_gemini_client()
          print('Gemini configuration validated')
          "

  lint:
    name: Lint and type check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Run ruff linting
        run: uv run ruff check .

      - name: Run ruff formatting check
        run: uv run ruff format --check .

      - name: Run mypy type checking
        run: uv run mypy src

  security:
    name: Security checks
    runs-on: ubuntu-latest
    # Retry after transient GitHub Actions infrastructure issues
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Run bandit security linting
        run: uv run bandit -r src/ -f json -o bandit-report.json

      - name: Run safety dependency check
        run: uv run safety check --save-json safety-report.json

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports
          path: |
            bandit-report.json
            safety-report.json

  docs:
    name: Build documentation
    runs-on: ubuntu-latest
    # Retry after transient GitHub Actions infrastructure issues
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: "3.11"

      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install dependencies
        run: uv sync --extra docs

      - name: Build documentation
        run: uv run mkdocs build

      - name: Upload docs artifact
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: site/
